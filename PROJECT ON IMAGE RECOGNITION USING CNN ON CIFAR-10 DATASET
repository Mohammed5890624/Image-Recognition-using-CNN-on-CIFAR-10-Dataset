{"cells":[{"cell_type":"markdown","id":"314f1708","metadata":{"id":"314f1708"},"source":["# Image Recognition using CNN on CIFAR-10 Dataset"]},{"cell_type":"code","execution_count":null,"id":"9dbf0ed8","metadata":{"id":"9dbf0ed8"},"outputs":[],"source":["import keras\n","from keras.datasets import cifar10\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\n","from pathlib import Path\n","from keras.utils.np_utils import to_categorical"]},{"cell_type":"code","execution_count":null,"id":"99aa8709","metadata":{"id":"99aa8709"},"outputs":[],"source":["(X_train,y_train),(X_test, y_test)=cifar10.load_data()"]},{"cell_type":"code","execution_count":null,"id":"1954e5a8","metadata":{"id":"1954e5a8"},"outputs":[],"source":["X_train=X_train.astype('float32')\n","X_test=X_test.astype('float32')\n","X_train/=255.0\n","X_test/=255.0"]},{"cell_type":"code","execution_count":null,"id":"51aeadc5","metadata":{"id":"51aeadc5"},"outputs":[],"source":["y_train=to_categorical(y_train,10)\n","y_test=to_categorical(y_test,10)"]},{"cell_type":"code","execution_count":null,"id":"5b0f9069","metadata":{"id":"5b0f9069","outputId":"284d161f-2ea9-4abb-93d2-9b63a9106502"},"outputs":[{"data":{"text/plain":["array([0., 0., 0., 0., 0., 0., 0., 0., 0., 1.], dtype=float32)"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["y_train[1]"]},{"cell_type":"code","execution_count":null,"id":"6c941a2f","metadata":{"id":"6c941a2f"},"outputs":[],"source":["model=Sequential()\n","model.add(Conv2D(32,(3,3),padding='same',input_shape=(32,32,3),activation='relu'))\n","model.add(Conv2D(32,(3,3),activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2,2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Conv2D(64,(3,3),padding='same',activation='relu'))\n","model.add(Conv2D(32,(3,3),activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2,2)))\n","model.add(Dropout(0.25))\n","\n","model.add(Flatten())\n","model.add(Dense(512, activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(10,activation='softmax'))"]},{"cell_type":"code","execution_count":null,"id":"12c265a5","metadata":{"id":"12c265a5","outputId":"e653800b-c6d2-4d50-becd-0cf112f1b9ea"},"outputs":[{"name":"stdout","output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d (Conv2D)             (None, 32, 32, 32)        896       \n","                                                                 \n"," conv2d_1 (Conv2D)           (None, 30, 30, 32)        9248      \n","                                                                 \n"," max_pooling2d (MaxPooling2D  (None, 15, 15, 32)       0         \n"," )                                                               \n","                                                                 \n"," dropout (Dropout)           (None, 15, 15, 32)        0         \n","                                                                 \n"," conv2d_2 (Conv2D)           (None, 15, 15, 64)        18496     \n","                                                                 \n"," conv2d_3 (Conv2D)           (None, 13, 13, 32)        18464     \n","                                                                 \n"," max_pooling2d_1 (MaxPooling  (None, 6, 6, 32)         0         \n"," 2D)                                                             \n","                                                                 \n"," dropout_1 (Dropout)         (None, 6, 6, 32)          0         \n","                                                                 \n"," flatten (Flatten)           (None, 1152)              0         \n","                                                                 \n"," dense (Dense)               (None, 512)               590336    \n","                                                                 \n"," dropout_2 (Dropout)         (None, 512)               0         \n","                                                                 \n"," dense_1 (Dense)             (None, 10)                5130      \n","                                                                 \n","=================================================================\n","Total params: 642,570\n","Trainable params: 642,570\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}],"source":["model.compile(\n","    loss='categorical_crossentropy',\n","    optimizer='adam',\n","    metrics=['accuracy'])\n","\n","model.summary()"]},{"cell_type":"code","execution_count":null,"id":"24c78b5f","metadata":{"id":"24c78b5f","outputId":"8b60ad42-6847-456b-9339-2a57e95c3e3f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/3\n","1563/1563 [==============================] - 776s 496ms/step - loss: 1.4961 - accuracy: 0.4514 - val_loss: 1.2076 - val_accuracy: 0.5618\n","Epoch 2/3\n","1563/1563 [==============================] - 660s 422ms/step - loss: 1.1603 - accuracy: 0.5848 - val_loss: 0.9892 - val_accuracy: 0.6483\n","Epoch 3/3\n","1563/1563 [==============================] - 867s 555ms/step - loss: 1.0013 - accuracy: 0.6478 - val_loss: 0.8557 - val_accuracy: 0.7038\n"]},{"data":{"text/plain":["<keras.callbacks.History at 0x1e2f0b78df0>"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["model.fit(\n","    X_train,\n","    y_train,\n","    batch_size=32,\n","    epochs=3,\n","    validation_data=(X_test, y_test),\n","    shuffle=True)"]},{"cell_type":"code","execution_count":null,"id":"377144f8","metadata":{"id":"377144f8","outputId":"f7468375-4c45-436d-bb17-4b16f51f703d"},"outputs":[{"data":{"text/plain":["4384"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["model_structure=model.to_json()\n","f=Path(\"model_structure.json\")\n","f.write_text(model_structure)"]},{"cell_type":"code","execution_count":null,"id":"3247abe4","metadata":{"id":"3247abe4"},"outputs":[],"source":["model.save_weights(\"model_weight.h5\")"]},{"cell_type":"code","execution_count":null,"id":"586ecb38","metadata":{"id":"586ecb38"},"outputs":[],"source":["from keras.models import model_from_json\n","from pathlib import Path\n","from keras.preprocessing import image\n","import numpy as np"]},{"cell_type":"code","execution_count":null,"id":"d2a176ba","metadata":{"id":"d2a176ba"},"outputs":[],"source":["class_labels=[\n","    \"Planes\",\n","    \"car\",\n","    \"Bird\",\n","    \"Cat\",\n","    \"Deer\",\n","    \"Dog\",\n","    \"Frog\",\n","    \"Horse\",\n","    \"Boat\",\n","    \"Truck\"\n","]"]},{"cell_type":"code","execution_count":null,"id":"008be1d1","metadata":{"id":"008be1d1"},"outputs":[],"source":["f=Path(\"model_structure.json\")\n","model_structure=f.read_text()"]},{"cell_type":"code","execution_count":null,"id":"8110cef4","metadata":{"id":"8110cef4"},"outputs":[],"source":["model=model_from_json(model_structure)"]},{"cell_type":"code","execution_count":null,"id":"4f971e6b","metadata":{"id":"4f971e6b"},"outputs":[],"source":["model.load_weights(\"model_weight.h5\")"]},{"cell_type":"code","execution_count":null,"id":"6d0c7ffb","metadata":{"id":"6d0c7ffb","outputId":"a1281d27-4984-44c7-e47c-9cd66c0ea7d7"},"outputs":[{"data":{"text/plain":["<matplotlib.image.AxesImage at 0x1e2f1deed30>"]},"execution_count":17,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["import matplotlib.pyplot as plt\n","from tensorflow.keras.utils import load_img, img_to_array\n","img=load_img(\"dog.png\",target_size=(32,32))\n","plt.imshow(img)"]},{"cell_type":"code","execution_count":null,"id":"085781b6","metadata":{"id":"085781b6"},"outputs":[],"source":["from tensorflow.keras.utils import img_to_array\n","image_to_test=img_to_array(img)\n","\n","list_of_images=np.expand_dims(image_to_test,axis=0)"]},{"cell_type":"code","execution_count":null,"id":"e6c0797b","metadata":{"id":"e6c0797b","outputId":"24a45095-553c-4e2a-9815-38a9f70e56d2"},"outputs":[{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 2s 2s/step\n"]}],"source":["results=model.predict(list_of_images)"]},{"cell_type":"code","execution_count":null,"id":"c4100449","metadata":{"id":"c4100449"},"outputs":[],"source":["single_result=results[0]"]},{"cell_type":"code","execution_count":null,"id":"04960aaf","metadata":{"id":"04960aaf"},"outputs":[],"source":["most_likely_class_index=int(np.argmax(single_result))\n","class_likelihood=single_result[most_likely_class_index]"]},{"cell_type":"code","execution_count":null,"id":"c5b4fd49","metadata":{"id":"c5b4fd49"},"outputs":[],"source":["class_label=class_labels[most_likely_class_index]"]},{"cell_type":"code","execution_count":null,"id":"3e3e451c","metadata":{"id":"3e3e451c","outputId":"111e2b15-f66a-446e-94a1-ab871dc0824c"},"outputs":[{"name":"stdout","output_type":"stream","text":["This is a image is a Truck likelihood: 1.000000\n"]}],"source":["print(\"This is a image is a {} likelihood: {:2f}\".format(class_label, class_likelihood))"]},{"cell_type":"markdown","id":"d575d49f","metadata":{"id":"d575d49f"},"source":["# Sentiment Classification using NLP and Classification Algorithm"]},{"cell_type":"code","execution_count":null,"id":"2b3a4a8a","metadata":{"id":"2b3a4a8a"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import re"]},{"cell_type":"code","execution_count":null,"id":"7aff7d4d","metadata":{"id":"7aff7d4d"},"outputs":[],"source":["import nltk\n","from nltk.corpus import stopwords\n","from nltk.stem import WordNetLemmatizer"]},{"cell_type":"code","execution_count":null,"id":"76bde583","metadata":{"id":"76bde583"},"outputs":[],"source":["from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.ensemble import RandomForestClassifier"]},{"cell_type":"code","execution_count":null,"id":"e1ea1a06","metadata":{"id":"e1ea1a06"},"outputs":[],"source":["from sklearn.metrics import accuracy_score, precision_score, recall_score, confusion_matrix, roc_curve\n","from sklearn.metrics import classification_report, plot_confusion_matrix"]},{"cell_type":"code","execution_count":null,"id":"eab66b8d","metadata":{"id":"eab66b8d"},"outputs":[],"source":["df_train=pd.read_csv(\"train.txt\",delimiter=\";\",names=['text','label'])\n","df_val=pd.read_csv(\"val.txt\",delimiter=\";\",names=['text','label'])"]},{"cell_type":"code","execution_count":null,"id":"27c1270e","metadata":{"id":"27c1270e"},"outputs":[],"source":["df=pd.concat([df_train, df_val])\n","df.reset_index(inplace=True, drop=True)"]},{"cell_type":"code","execution_count":null,"id":"676e13e3","metadata":{"id":"676e13e3","outputId":"7b21be17-6a98-4397-d31b-028236fdd42f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Shape of the dataframe:  (18000, 2)\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>text</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6181</th>\n","      <td>i feel that she should change herself and i wa...</td>\n","      <td>fear</td>\n","    </tr>\n","    <tr>\n","      <th>6814</th>\n","      <td>im feeling energetic and motivated with my kid...</td>\n","      <td>joy</td>\n","    </tr>\n","    <tr>\n","      <th>14993</th>\n","      <td>i remember feeling absolutely devastated when ...</td>\n","      <td>sadness</td>\n","    </tr>\n","    <tr>\n","      <th>185</th>\n","      <td>i feel like i m always the one getting punishe...</td>\n","      <td>sadness</td>\n","    </tr>\n","    <tr>\n","      <th>13834</th>\n","      <td>i do feel sympathetic to the parties involved ...</td>\n","      <td>love</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                                    text    label\n","6181   i feel that she should change herself and i wa...     fear\n","6814   im feeling energetic and motivated with my kid...      joy\n","14993  i remember feeling absolutely devastated when ...  sadness\n","185    i feel like i m always the one getting punishe...  sadness\n","13834  i do feel sympathetic to the parties involved ...     love"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["print(\"Shape of the dataframe: \",df.shape)\n","df.sample(5)"]},{"cell_type":"code","execution_count":null,"id":"00cf206e","metadata":{"id":"00cf206e","outputId":"9bbc45df-e681-491c-c26d-4928500068ee"},"outputs":[{"data":{"text/plain":["<AxesSubplot:xlabel='label', ylabel='count'>"]},"execution_count":8,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","sns.countplot(df.label)"]},{"cell_type":"code","execution_count":null,"id":"8ce45cec","metadata":{"id":"8ce45cec"},"outputs":[],"source":["def custom_encoder(df):\n","    df.replace(to_replace=\"surprise\",value=1, inplace=True)\n","    df.replace(to_replace=\"love\",value=1, inplace=True)\n","    df.replace(to_replace=\"joy\",value=1, inplace=True)\n","    df.replace(to_replace=\"fear\",value=0, inplace=True)\n","    df.replace(to_replace=\"anger\",value=0, inplace=True)\n","    df.replace(to_replace=\"sadness\",value=0, inplace=True)"]},{"cell_type":"code","execution_count":null,"id":"fd55a7d8","metadata":{"id":"fd55a7d8"},"outputs":[],"source":["custom_encoder(df['label'])"]},{"cell_type":"code","execution_count":null,"id":"be05a0b3","metadata":{"id":"be05a0b3","outputId":"815ad3b8-3cc0-4a16-b9ad-07eafd7270ee"},"outputs":[{"data":{"text/plain":["<AxesSubplot:xlabel='label', ylabel='count'>"]},"execution_count":11,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["sns.countplot(df.label)"]},{"cell_type":"code","execution_count":null,"id":"508203e6","metadata":{"id":"508203e6"},"outputs":[],"source":["lm=WordNetLemmatizer()"]},{"cell_type":"code","execution_count":null,"id":"40823f66","metadata":{"id":"40823f66"},"outputs":[],"source":["def text_transformation(df_col):\n","    corpus=[]\n","    for item in df_col:\n","        new_item=re.sub('[^a-zA-Z]',' ',str(item))\n","        new_item=new_item.lower()\n","        new_item=new_item.split()\n","        new_item=[lm.lemmatize(word) for word in new_item if word not in set(stopwords.words('english'))]\n","        corpus.append(' '.join(str(x) for x in new_item))\n","    return corpus"]},{"cell_type":"code","execution_count":null,"id":"e3701c61","metadata":{"id":"e3701c61"},"outputs":[],"source":["corpus=text_transformation(df['text'])"]},{"cell_type":"code","execution_count":null,"id":"dbc85301","metadata":{"id":"dbc85301"},"outputs":[],"source":["cv=CountVectorizer(ngram_range=(1,2))\n","traindata=cv.fit_transform(corpus)\n","X=traindata\n","y=df.label"]},{"cell_type":"code","execution_count":null,"id":"22f6ab84","metadata":{"id":"22f6ab84"},"outputs":[],"source":["parameters={'max_features':('auto','sqrt'),\n","            'n_estimators':[5,10],\n","            'max_depth':[10,None],\n","            'min_samples_split':[5],\n","            'min_samples_leaf':[1],\n","            'bootstrap':[True]\n","           }"]},{"cell_type":"code","execution_count":null,"id":"9935a0b7","metadata":{"id":"9935a0b7","outputId":"fd0039ca-6c35-44a8-ec5c-ac370c7dba88"},"outputs":[{"data":{"text/plain":["{'bootstrap': True,\n"," 'max_depth': None,\n"," 'max_features': 'sqrt',\n"," 'min_samples_leaf': 1,\n"," 'min_samples_split': 5,\n"," 'n_estimators': 10}"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["grid_search=GridSearchCV(RandomForestClassifier(), parameters, cv=5, return_train_score=True,n_jobs=-1)\n","grid_search.fit(X,y)\n","grid_search.best_params_"]},{"cell_type":"code","execution_count":null,"id":"994ea001","metadata":{"id":"994ea001","outputId":"fb7f3a58-cb2a-4fc4-e3f3-aecfd9816be9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Parameters:  {'bootstrap': True, 'max_depth': 10, 'max_features': 'auto', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 5}\n","Mean test Score:  0.592388888888889\n","Rank:  [7 6 8 5 4 2 3 1]\n","Parameters:  {'bootstrap': True, 'max_depth': 10, 'max_features': 'auto', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 10}\n","Mean test Score:  0.6188888888888889\n","Rank:  [7 6 8 5 4 2 3 1]\n","Parameters:  {'bootstrap': True, 'max_depth': 10, 'max_features': 'sqrt', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 5}\n","Mean test Score:  0.5881666666666667\n","Rank:  [7 6 8 5 4 2 3 1]\n","Parameters:  {'bootstrap': True, 'max_depth': 10, 'max_features': 'sqrt', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 10}\n","Mean test Score:  0.6207222222222223\n","Rank:  [7 6 8 5 4 2 3 1]\n","Parameters:  {'bootstrap': True, 'max_depth': None, 'max_features': 'auto', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 5}\n","Mean test Score:  0.9135\n","Rank:  [7 6 8 5 4 2 3 1]\n","Parameters:  {'bootstrap': True, 'max_depth': None, 'max_features': 'auto', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 10}\n","Mean test Score:  0.9342777777777778\n","Rank:  [7 6 8 5 4 2 3 1]\n","Parameters:  {'bootstrap': True, 'max_depth': None, 'max_features': 'sqrt', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 5}\n","Mean test Score:  0.9185000000000001\n","Rank:  [7 6 8 5 4 2 3 1]\n","Parameters:  {'bootstrap': True, 'max_depth': None, 'max_features': 'sqrt', 'min_samples_leaf': 1, 'min_samples_split': 5, 'n_estimators': 10}\n","Mean test Score:  0.9348888888888889\n","Rank:  [7 6 8 5 4 2 3 1]\n"]}],"source":["for i in range(8):\n","    print('Parameters: ', grid_search.cv_results_['params'][i])\n","    print('Mean test Score: ',grid_search.cv_results_['mean_test_score'][i])\n","    print(\"Rank: \",grid_search.cv_results_['rank_test_score'])"]},{"cell_type":"code","execution_count":null,"id":"54eeca76","metadata":{"id":"54eeca76","outputId":"9836a185-f762-4b24-9828-a5a0e5aaf6b0"},"outputs":[{"data":{"text/plain":["RandomForestClassifier(max_features='sqrt', min_samples_split=5,\n","                       n_estimators=10)"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["rfc= RandomForestClassifier(max_features=grid_search.best_params_['max_features'],\n","                           max_depth=grid_search.best_params_['max_depth'],\n","                           n_estimators=grid_search.best_params_['n_estimators'],\n","                           min_samples_split=grid_search.best_params_['min_samples_split'],\n","                           min_samples_leaf=grid_search.best_params_['min_samples_leaf'],\n","                           bootstrap=grid_search.best_params_['bootstrap'])\n","\n","rfc.fit(X,y)"]},{"cell_type":"code","execution_count":null,"id":"7e7aac82","metadata":{"id":"7e7aac82"},"outputs":[],"source":["test_df=pd.read_csv('test.txt',delimiter=';',names=['text','label'])"]},{"cell_type":"code","execution_count":null,"id":"8831f147","metadata":{"id":"8831f147"},"outputs":[],"source":["X_test, y_test=test_df.text, test_df.label\n","\n","# encode the labels into two classes 0 and 1\n","test_df= custom_encoder(y_test)\n","\n","# preprocessing of text\n","test_corpus=text_transformation(X_test)\n","\n","# convert the text data into vectors\n","testdata=cv.transform(test_corpus)\n","\n","#predict the target\n","predictions=rfc.predict(testdata)"]},{"cell_type":"code","execution_count":null,"id":"b9e2a5db","metadata":{"id":"b9e2a5db","outputId":"51fb847d-86ab-4ce4-ff44-b7812abe130c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy Score: 0.9445\n","Precision Score: 0.9479512735326688\n","Recall Score 0.9304347826086956\n","--------------------------------------------------\n","              precision    recall  f1-score   support\n","\n","           0       0.94      0.96      0.95      1080\n","           1       0.95      0.93      0.94       920\n","\n","    accuracy                           0.94      2000\n","   macro avg       0.94      0.94      0.94      2000\n","weighted avg       0.94      0.94      0.94      2000\n","\n"]}],"source":["acc_score= accuracy_score(y_test, predictions)\n","pre_score= precision_score(y_test, predictions)\n","rec_score=recall_score(y_test, predictions)\n","\n","print('Accuracy Score:',acc_score)\n","print(\"Precision Score:\",pre_score)\n","print('Recall Score',rec_score)\n","\n","print(\"-\"*50)\n","\n","cr=classification_report(y_test, predictions)\n","print(cr)"]},{"cell_type":"code","execution_count":null,"id":"1106c0eb","metadata":{"id":"1106c0eb","outputId":"05c05d3f-b27c-487f-fa7d-609fb47e3eb9"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["predictions_probability= rfc.predict_proba(testdata)\n","fpr,tpr,thresholds=roc_curve(y_test, predictions_probability[:,1])\n","\n","plt.plot(fpr,tpr)\n","plt.plot([0,1])\n","plt.title('ROC Curve')\n","plt.xlabel('False Positive Rate')\n","plt.ylabel('True Positive Rate')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"id":"3e4bb721","metadata":{"id":"3e4bb721"},"outputs":[],"source":["def expression_check(prediction_input):\n","    if prediction_input==0:\n","        print(\"Input statement has negative sentiment\")\n","    elif prediction_input==1:\n","        print(\"Input statement has positive sentiment\")\n","    else:\n","        print(\"Invalid Statement\")"]},{"cell_type":"code","execution_count":null,"id":"5da25175","metadata":{"id":"5da25175"},"outputs":[],"source":["def sentiment_predictor(input):\n","    input=text_transformation(input)\n","    transformed_input=cv.transform(input)\n","    prediction=rfc.predict(transformed_input)\n","    expression_check(prediction)"]},{"cell_type":"code","execution_count":null,"id":"4fc95485","metadata":{"id":"4fc95485"},"outputs":[],"source":["input1=[\"Sometimes I just don't want to go out\"]\n","input2=[\"I bought a new phone and it's so good\"]"]},{"cell_type":"code","execution_count":null,"id":"256b2a83","metadata":{"id":"256b2a83","outputId":"65034588-b195-4fbd-9ab6-8648b932b1eb"},"outputs":[{"name":"stdout","output_type":"stream","text":["Input statement has negative sentiment\n","Input statement has positive sentiment\n"]}],"source":["sentiment_predictor(input1)\n","sentiment_predictor(input2)"]},{"cell_type":"code","execution_count":null,"id":"9d61dcc5","metadata":{"id":"9d61dcc5"},"outputs":[],"source":["data={\"intents\":[\n","    {\"tag\":\"greeting\",\n","     \"patterns\":[\"Hello\",\"How are you?\",\"Hi There\",\"Hi\",\"What's up\"],\n","     \"responses\":[\"Howdy Partner!\",\"Hello\",\"How are you doing?\",\"Greetings!\",\"How do you do\"]\n","        },\n","    {\"tag\":\"age\",\n","     \"patterns\":[\"how old are you\",\"when is your birthday\",\"when was you born\"],\n","     \"responses\":[\"I am 24 years old\",\"I was born in 1966\",\"My birthday is July 3rd and I was born in 1996\",\"03/07/1996\"]\n","        },\n","    {\"tag\":\"date\",\n","     \"patterns\":[\"what are you doing this weekend\",\n","                \"do you want to hangout sometime?\",\"what are your plans for this week\"],\n","     \"responses\":[\"I am available this week\",\"I don't have any plans\",\"I am not busy\"]\n","        },\n","    {\"tag\":\"name\",\n","     \"patterns\":[\"what's your name\",\"what are you called\",\"who are you\"],\n","     \"responses\":[\"My name is Kippi\",\"I'm Kippi\",\"Kippi\"]\n","        },\n","    {\"tag\":\"goodbye\",\n","     \"patterns\":[\"bye\",\"g2g\",\"see ya\",\"adios\",\"cya\"],\n","     \"responses\":[\"It was nice speaking to you\",\"See you later\",\"Speak Soon\"]\n","        },\n","]}"]},{"cell_type":"code","execution_count":null,"id":"ab42de72","metadata":{"id":"ab42de72","outputId":"917d27b3-ecfe-41c0-8efa-beeb2eaa35c2"},"outputs":[{"name":"stderr","output_type":"stream","text":["[nltk_data] Downloading package punkt to C:\\Users\\Mohit\n","[nltk_data]     Tripathi\\AppData\\Roaming\\nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","[nltk_data] Downloading package wordnet to C:\\Users\\Mohit\n","[nltk_data]     Tripathi\\AppData\\Roaming\\nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n"]},{"data":{"text/plain":["True"]},"execution_count":30,"metadata":{},"output_type":"execute_result"}],"source":["import json\n","import string\n","import random\n","\n","import nltk\n","import numpy as np\n","from nltk.stem import WordNetLemmatizer\n","\n","import tensorflow as tf\n","from tensorflow.keras import Sequential\n","from tensorflow.keras.layers import Dense,Dropout\n","\n","nltk.download(\"punkt\")\n","nltk.download(\"wordnet\")"]},{"cell_type":"code","execution_count":null,"id":"6f17045a","metadata":{"id":"6f17045a"},"outputs":[],"source":["lemmatizer=WordNetLemmatizer()\n","\n","words=[]\n","classes=[]\n","doc_x=[]\n","doc_y=[]"]},{"cell_type":"code","execution_count":null,"id":"ca8a5e79","metadata":{"id":"ca8a5e79"},"outputs":[],"source":["for intent in data[\"intents\"]:\n","    for pattern in intent[\"patterns\"]:\n","        tokens=nltk.word_tokenize(pattern)\n","        words.extend(tokens)\n","        doc_x.append(pattern)\n","        doc_y.append(intent[\"tag\"])\n","    if intent[\"tag\"] not in classes:\n","        classes.append(intent[\"tag\"])"]},{"cell_type":"code","execution_count":null,"id":"30fab310","metadata":{"id":"30fab310"},"outputs":[],"source":["words=[lemmatizer.lemmatize(word.lower()) for word in words if word not in string.punctuation]"]},{"cell_type":"code","execution_count":null,"id":"cd36b5f7","metadata":{"id":"cd36b5f7"},"outputs":[],"source":["words=sorted(set(words))\n","classes=sorted(set(classes))"]},{"cell_type":"code","execution_count":null,"id":"dcae004e","metadata":{"id":"dcae004e","outputId":"5e27e3ab-827c-4b7f-bce9-e3b58b0ce528"},"outputs":[{"name":"stdout","output_type":"stream","text":["[\"'s\", 'adios', 'are', 'birthday', 'born', 'bye', 'called', 'cya', 'do', 'doing', 'for', 'g2g', 'hangout', 'hello', 'hi', 'how', 'is', 'name', 'old', 'plan', 'see', 'sometime', 'there', 'this', 'to', 'up', 'wa', 'want', 'week', 'weekend', 'what', 'when', 'who', 'ya', 'you', 'your']\n"]}],"source":["print(words)"]},{"cell_type":"code","execution_count":null,"id":"5d99979b","metadata":{"id":"5d99979b","outputId":"3cdca179-9e2b-494a-e32e-7d6d7c2776c2"},"outputs":[{"name":"stdout","output_type":"stream","text":["['age', 'date', 'goodbye', 'greeting', 'name']\n"]}],"source":["print(classes)"]},{"cell_type":"code","execution_count":null,"id":"20a191d3","metadata":{"id":"20a191d3","outputId":"594b9b98-37d7-4ab9-bdfe-c8a05092df77"},"outputs":[{"name":"stdout","output_type":"stream","text":["['Hello', 'How are you?', 'Hi There', 'Hi', \"What's up\", 'how old are you', 'when is your birthday', 'when was you born', 'what are you doing this weekend', 'do you want to hangout sometime?', 'what are your plans for this week', \"what's your name\", 'what are you called', 'who are you', 'bye', 'g2g', 'see ya', 'adios', 'cya']\n"]}],"source":["print(doc_x)"]},{"cell_type":"code","execution_count":null,"id":"d0b24835","metadata":{"id":"d0b24835","outputId":"e38d72a4-057d-4894-8de9-aad259b37c75"},"outputs":[{"name":"stdout","output_type":"stream","text":["['greeting', 'greeting', 'greeting', 'greeting', 'greeting', 'age', 'age', 'age', 'date', 'date', 'date', 'name', 'name', 'name', 'goodbye', 'goodbye', 'goodbye', 'goodbye', 'goodbye']\n"]}],"source":["print(doc_y)"]},{"cell_type":"code","execution_count":null,"id":"8dd89b92","metadata":{"id":"8dd89b92"},"outputs":[],"source":["training=[]\n","out_empty=[0]*len(classes)\n","\n","# creating a bag of words model\n","\n","for idx, doc in enumerate(doc_x):\n","    bow=[]\n","    text=lemmatizer.lemmatize(doc.lower())\n","    for word in words:\n","        bow.append(1) if word in text else bow.append(0)\n","    output_row=list(out_empty)\n","    output_row[classes.index(doc_y[idx])]=1\n","\n","    training.append([bow, output_row])\n","\n","random.shuffle(training)\n","\n","training=np.array(training,dtype=object)\n","\n","train_X=np.array(list(training[:,0]))\n","train_y=np.array(list(training[:,1]))"]},{"cell_type":"code","execution_count":null,"id":"a4401877","metadata":{"id":"a4401877"},"outputs":[],"source":["input_shape=(len(train_X[0]),)\n","output_shape=len(train_y[0])\n","\n","epochs=500"]},{"cell_type":"code","execution_count":null,"id":"6ca52543","metadata":{"id":"6ca52543","outputId":"faed3059-7253-4620-bb0a-8b6e51271b60"},"outputs":[{"name":"stdout","output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 128)               4736      \n","                                                                 \n"," dropout (Dropout)           (None, 128)               0         \n","                                                                 \n"," dense_1 (Dense)             (None, 64)                8256      \n","                                                                 \n"," dropout_1 (Dropout)         (None, 64)                0         \n","                                                                 \n"," dense_2 (Dense)             (None, 5)                 325       \n","                                                                 \n","=================================================================\n","Total params: 13,317\n","Trainable params: 13,317\n","Non-trainable params: 0\n","_________________________________________________________________\n","None\n"]}],"source":["model=Sequential()\n","model.add(Dense(128, input_shape=input_shape,activation='relu'))\n","model.add(Dropout(0.5))\n","model.add(Dense(64, activation='relu'))\n","model.add(Dropout(0.3))\n","model.add(Dense(output_shape,activation='softmax'))\n","adam=tf.keras.optimizers.Adam(learning_rate=0.01, decay=1e-6)\n","\n","model.compile(loss='categorical_crossentropy',\n","             optimizer=\"adam\",\n","             metrics=\"accuracy\")\n","\n","print(model.summary())"]},{"cell_type":"code","execution_count":null,"id":"e41cf2a2","metadata":{"id":"e41cf2a2","outputId":"2e859a49-4094-4a95-e0cd-067f13c14325"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/500\n","1/1 [==============================] - 2s 2s/step - loss: 1.6855 - accuracy: 0.1579\n","Epoch 2/500\n","1/1 [==============================] - 0s 10ms/step - loss: 1.6324 - accuracy: 0.3158\n","Epoch 3/500\n","1/1 [==============================] - 0s 13ms/step - loss: 1.6283 - accuracy: 0.1579\n","Epoch 4/500\n","1/1 [==============================] - 0s 11ms/step - loss: 1.6591 - accuracy: 0.1579\n","Epoch 5/500\n","1/1 [==============================] - 0s 10ms/step - loss: 1.5266 - accuracy: 0.3684\n","Epoch 6/500\n","1/1 [==============================] - 0s 13ms/step - loss: 1.6017 - accuracy: 0.3158\n","Epoch 7/500\n","1/1 [==============================] - 0s 13ms/step - loss: 1.5275 - accuracy: 0.4211\n","Epoch 8/500\n","1/1 [==============================] - 0s 10ms/step - loss: 1.4959 - accuracy: 0.5263\n","Epoch 9/500\n","1/1 [==============================] - 0s 13ms/step - loss: 1.4857 - accuracy: 0.4211\n","Epoch 10/500\n","1/1 [==============================] - 0s 12ms/step - loss: 1.5812 - accuracy: 0.3684\n","Epoch 11/500\n","1/1 [==============================] - 0s 14ms/step - loss: 1.5465 - accuracy: 0.3684\n","Epoch 12/500\n","1/1 [==============================] - 0s 15ms/step - loss: 1.4347 - accuracy: 0.4737\n","Epoch 13/500\n","1/1 [==============================] - 0s 15ms/step - loss: 1.4319 - accuracy: 0.5263\n","Epoch 14/500\n","1/1 [==============================] - 0s 17ms/step - loss: 1.5250 - accuracy: 0.3684\n","Epoch 15/500\n","1/1 [==============================] - 0s 24ms/step - loss: 1.4445 - accuracy: 0.4211\n","Epoch 16/500\n","1/1 [==============================] - 0s 20ms/step - loss: 1.4778 - accuracy: 0.5789\n","Epoch 17/500\n","1/1 [==============================] - 0s 20ms/step - loss: 1.3965 - accuracy: 0.5263\n","Epoch 18/500\n","1/1 [==============================] - 0s 21ms/step - loss: 1.4431 - accuracy: 0.5263\n","Epoch 19/500\n","1/1 [==============================] - 0s 20ms/step - loss: 1.4043 - accuracy: 0.5789\n","Epoch 20/500\n","1/1 [==============================] - 0s 24ms/step - loss: 1.3342 - accuracy: 0.5789\n","Epoch 21/500\n","1/1 [==============================] - 0s 22ms/step - loss: 1.2493 - accuracy: 0.6842\n","Epoch 22/500\n","1/1 [==============================] - 0s 15ms/step - loss: 1.3360 - accuracy: 0.7368\n","Epoch 23/500\n","1/1 [==============================] - 0s 16ms/step - loss: 1.2943 - accuracy: 0.6842\n","Epoch 24/500\n","1/1 [==============================] - 0s 18ms/step - loss: 1.2728 - accuracy: 0.6842\n","Epoch 25/500\n","1/1 [==============================] - 0s 16ms/step - loss: 1.3037 - accuracy: 0.6842\n","Epoch 26/500\n","1/1 [==============================] - 0s 21ms/step - loss: 1.3115 - accuracy: 0.6316\n","Epoch 27/500\n","1/1 [==============================] - 0s 20ms/step - loss: 1.2583 - accuracy: 0.7368\n","Epoch 28/500\n","1/1 [==============================] - 0s 12ms/step - loss: 1.3315 - accuracy: 0.7368\n","Epoch 29/500\n","1/1 [==============================] - 0s 13ms/step - loss: 1.2693 - accuracy: 0.7368\n","Epoch 30/500\n","1/1 [==============================] - 0s 12ms/step - loss: 1.2514 - accuracy: 0.7895\n","Epoch 31/500\n","1/1 [==============================] - 0s 17ms/step - loss: 1.2458 - accuracy: 0.6316\n","Epoch 32/500\n","1/1 [==============================] - 0s 14ms/step - loss: 1.2503 - accuracy: 0.6842\n","Epoch 33/500\n","1/1 [==============================] - 0s 16ms/step - loss: 1.1893 - accuracy: 0.7368\n","Epoch 34/500\n","1/1 [==============================] - 0s 13ms/step - loss: 1.0789 - accuracy: 0.8947\n","Epoch 35/500\n","1/1 [==============================] - 0s 18ms/step - loss: 1.1650 - accuracy: 0.8421\n","Epoch 36/500\n","1/1 [==============================] - 0s 17ms/step - loss: 1.1282 - accuracy: 0.8947\n","Epoch 37/500\n","1/1 [==============================] - 0s 15ms/step - loss: 1.1980 - accuracy: 0.7895\n","Epoch 38/500\n","1/1 [==============================] - 0s 15ms/step - loss: 1.1105 - accuracy: 0.7368\n","Epoch 39/500\n","1/1 [==============================] - 0s 13ms/step - loss: 1.1887 - accuracy: 0.5789\n","Epoch 40/500\n","1/1 [==============================] - 0s 14ms/step - loss: 1.1235 - accuracy: 0.7895\n","Epoch 41/500\n","1/1 [==============================] - 0s 14ms/step - loss: 1.1148 - accuracy: 0.8421\n","Epoch 42/500\n","1/1 [==============================] - 0s 18ms/step - loss: 1.1244 - accuracy: 0.8421\n","Epoch 43/500\n","1/1 [==============================] - 0s 23ms/step - loss: 1.0546 - accuracy: 0.8947\n","Epoch 44/500\n","1/1 [==============================] - 0s 16ms/step - loss: 1.0668 - accuracy: 0.7368\n","Epoch 45/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.9942 - accuracy: 0.8947\n","Epoch 46/500\n","1/1 [==============================] - 0s 19ms/step - loss: 1.0738 - accuracy: 0.7368\n","Epoch 47/500\n","1/1 [==============================] - 0s 16ms/step - loss: 1.0104 - accuracy: 0.7368\n","Epoch 48/500\n","1/1 [==============================] - 0s 22ms/step - loss: 1.0129 - accuracy: 0.7368\n","Epoch 49/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.9929 - accuracy: 0.8421\n","Epoch 50/500\n","1/1 [==============================] - 0s 25ms/step - loss: 1.0001 - accuracy: 0.7895\n","Epoch 51/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.9873 - accuracy: 0.8421\n","Epoch 52/500\n","1/1 [==============================] - 0s 19ms/step - loss: 1.0169 - accuracy: 0.6842\n","Epoch 53/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.9262 - accuracy: 0.8947\n","Epoch 54/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.9362 - accuracy: 0.8421\n","Epoch 55/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.8084 - accuracy: 0.9474\n","Epoch 56/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.8234 - accuracy: 0.8421\n","Epoch 57/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.7343 - accuracy: 1.0000\n","Epoch 58/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.8628 - accuracy: 0.8421\n","Epoch 59/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.7965 - accuracy: 0.8947\n","Epoch 60/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.7757 - accuracy: 0.9474\n","Epoch 61/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.7849 - accuracy: 0.9474\n","Epoch 62/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.7005 - accuracy: 0.9474\n","Epoch 63/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.7866 - accuracy: 0.9474\n","Epoch 64/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.6523 - accuracy: 0.8947\n","Epoch 65/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.6447 - accuracy: 0.9474\n","Epoch 66/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.7984 - accuracy: 0.9474\n","Epoch 67/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.7081 - accuracy: 0.9474\n","Epoch 68/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.6855 - accuracy: 0.8421\n","Epoch 69/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.7031 - accuracy: 0.9474\n","Epoch 70/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.7586 - accuracy: 0.8421\n","Epoch 71/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.6346 - accuracy: 0.8947\n","Epoch 72/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.6423 - accuracy: 0.8947\n","Epoch 73/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.5970 - accuracy: 0.9474\n","Epoch 74/500\n","1/1 [==============================] - 0s 43ms/step - loss: 0.4959 - accuracy: 1.0000\n","Epoch 75/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.6553 - accuracy: 0.9474\n","Epoch 76/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.6025 - accuracy: 0.9474\n","Epoch 77/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.6345 - accuracy: 0.7368\n","Epoch 78/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.4346 - accuracy: 1.0000\n","Epoch 79/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.5050 - accuracy: 0.8947\n","Epoch 80/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.5412 - accuracy: 0.8421\n","Epoch 81/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.5058 - accuracy: 0.9474\n","Epoch 82/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.3928 - accuracy: 0.9474\n","Epoch 83/500\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 19ms/step - loss: 0.5259 - accuracy: 1.0000\n","Epoch 84/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.4750 - accuracy: 1.0000\n","Epoch 85/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.4855 - accuracy: 0.9474\n","Epoch 86/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.4596 - accuracy: 0.9474\n","Epoch 87/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.4414 - accuracy: 0.9474\n","Epoch 88/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.3673 - accuracy: 0.9474\n","Epoch 89/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.3431 - accuracy: 0.9474\n","Epoch 90/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.3561 - accuracy: 1.0000\n","Epoch 91/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.4038 - accuracy: 0.9474\n","Epoch 92/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.4194 - accuracy: 0.8947\n","Epoch 93/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.3323 - accuracy: 1.0000\n","Epoch 94/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.3743 - accuracy: 0.9474\n","Epoch 95/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.4177 - accuracy: 0.9474\n","Epoch 96/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.2757 - accuracy: 0.9474\n","Epoch 97/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.3708 - accuracy: 0.9474\n","Epoch 98/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.3914 - accuracy: 1.0000\n","Epoch 99/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.4278 - accuracy: 0.9474\n","Epoch 100/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.3127 - accuracy: 1.0000\n","Epoch 101/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.3005 - accuracy: 1.0000\n","Epoch 102/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.2897 - accuracy: 0.9474\n","Epoch 103/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.2499 - accuracy: 1.0000\n","Epoch 104/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.3348 - accuracy: 0.9474\n","Epoch 105/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.3102 - accuracy: 1.0000\n","Epoch 106/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.3408 - accuracy: 0.9474\n","Epoch 107/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.2585 - accuracy: 0.9474\n","Epoch 108/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.1817 - accuracy: 1.0000\n","Epoch 109/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.1915 - accuracy: 1.0000\n","Epoch 110/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.2892 - accuracy: 1.0000\n","Epoch 111/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.2206 - accuracy: 1.0000\n","Epoch 112/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.1596 - accuracy: 1.0000\n","Epoch 113/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.1868 - accuracy: 1.0000\n","Epoch 114/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.1806 - accuracy: 0.9474\n","Epoch 115/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.1841 - accuracy: 1.0000\n","Epoch 116/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.2134 - accuracy: 0.9474\n","Epoch 117/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.2475 - accuracy: 0.9474\n","Epoch 118/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.1643 - accuracy: 1.0000\n","Epoch 119/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.2316 - accuracy: 0.8947\n","Epoch 120/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.1986 - accuracy: 1.0000\n","Epoch 121/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.2886 - accuracy: 0.8947\n","Epoch 122/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.1938 - accuracy: 1.0000\n","Epoch 123/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.2073 - accuracy: 1.0000\n","Epoch 124/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.1631 - accuracy: 0.9474\n","Epoch 125/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.2360 - accuracy: 0.9474\n","Epoch 126/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.1460 - accuracy: 1.0000\n","Epoch 127/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.1638 - accuracy: 1.0000\n","Epoch 128/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.1807 - accuracy: 0.8947\n","Epoch 129/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.1739 - accuracy: 1.0000\n","Epoch 130/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.1641 - accuracy: 0.9474\n","Epoch 131/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.1848 - accuracy: 1.0000\n","Epoch 132/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.1105 - accuracy: 1.0000\n","Epoch 133/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.2064 - accuracy: 1.0000\n","Epoch 134/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.1370 - accuracy: 1.0000\n","Epoch 135/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0957 - accuracy: 1.0000\n","Epoch 136/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.1197 - accuracy: 1.0000\n","Epoch 137/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.1724 - accuracy: 1.0000\n","Epoch 138/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.1680 - accuracy: 0.9474\n","Epoch 139/500\n","1/1 [==============================] - 0s 7ms/step - loss: 0.1551 - accuracy: 1.0000\n","Epoch 140/500\n","1/1 [==============================] - 0s 6ms/step - loss: 0.1793 - accuracy: 0.9474\n","Epoch 141/500\n","1/1 [==============================] - 0s 6ms/step - loss: 0.0658 - accuracy: 1.0000\n","Epoch 142/500\n","1/1 [==============================] - 0s 6ms/step - loss: 0.1143 - accuracy: 1.0000\n","Epoch 143/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0856 - accuracy: 1.0000\n","Epoch 144/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.1335 - accuracy: 1.0000\n","Epoch 145/500\n","1/1 [==============================] - 0s 31ms/step - loss: 0.1080 - accuracy: 1.0000\n","Epoch 146/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.0909 - accuracy: 1.0000\n","Epoch 147/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.1137 - accuracy: 1.0000\n","Epoch 148/500\n","1/1 [==============================] - 0s 33ms/step - loss: 0.0745 - accuracy: 1.0000\n","Epoch 149/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.1284 - accuracy: 0.9474\n","Epoch 150/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.1461 - accuracy: 0.9474\n","Epoch 151/500\n","1/1 [==============================] - 0s 30ms/step - loss: 0.1831 - accuracy: 0.9474\n","Epoch 152/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.1428 - accuracy: 1.0000\n","Epoch 153/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.1138 - accuracy: 0.9474\n","Epoch 154/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.2441 - accuracy: 0.9474\n","Epoch 155/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.1158 - accuracy: 1.0000\n","Epoch 156/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0511 - accuracy: 1.0000\n","Epoch 157/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.1364 - accuracy: 0.9474\n","Epoch 158/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0692 - accuracy: 1.0000\n","Epoch 159/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.1601 - accuracy: 0.9474\n","Epoch 160/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.1407 - accuracy: 1.0000\n","Epoch 161/500\n","1/1 [==============================] - 0s 43ms/step - loss: 0.1001 - accuracy: 0.9474\n","Epoch 162/500\n","1/1 [==============================] - 0s 38ms/step - loss: 0.0893 - accuracy: 1.0000\n","Epoch 163/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0709 - accuracy: 1.0000\n","Epoch 164/500\n","1/1 [==============================] - 0s 32ms/step - loss: 0.0739 - accuracy: 1.0000\n","Epoch 165/500\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 51ms/step - loss: 0.0767 - accuracy: 1.0000\n","Epoch 166/500\n","1/1 [==============================] - 0s 31ms/step - loss: 0.2303 - accuracy: 0.9474\n","Epoch 167/500\n","1/1 [==============================] - 0s 33ms/step - loss: 0.0569 - accuracy: 1.0000\n","Epoch 168/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0512 - accuracy: 1.0000\n","Epoch 169/500\n","1/1 [==============================] - 0s 29ms/step - loss: 0.1034 - accuracy: 0.9474\n","Epoch 170/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0824 - accuracy: 1.0000\n","Epoch 171/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.1174 - accuracy: 1.0000\n","Epoch 172/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0669 - accuracy: 1.0000\n","Epoch 173/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.1550 - accuracy: 0.9474\n","Epoch 174/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.1181 - accuracy: 0.9474\n","Epoch 175/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0398 - accuracy: 1.0000\n","Epoch 176/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.0909 - accuracy: 1.0000\n","Epoch 177/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.1603 - accuracy: 0.9474\n","Epoch 178/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0630 - accuracy: 1.0000\n","Epoch 179/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0989 - accuracy: 1.0000\n","Epoch 180/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0510 - accuracy: 1.0000\n","Epoch 181/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.0700 - accuracy: 1.0000\n","Epoch 182/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0919 - accuracy: 1.0000\n","Epoch 183/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0281 - accuracy: 1.0000\n","Epoch 184/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0686 - accuracy: 1.0000\n","Epoch 185/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0586 - accuracy: 1.0000\n","Epoch 186/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0480 - accuracy: 1.0000\n","Epoch 187/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0945 - accuracy: 0.9474\n","Epoch 188/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0895 - accuracy: 1.0000\n","Epoch 189/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0620 - accuracy: 1.0000\n","Epoch 190/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0758 - accuracy: 1.0000\n","Epoch 191/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0782 - accuracy: 1.0000\n","Epoch 192/500\n","1/1 [==============================] - 0s 38ms/step - loss: 0.0886 - accuracy: 1.0000\n","Epoch 193/500\n","1/1 [==============================] - 0s 32ms/step - loss: 0.0467 - accuracy: 1.0000\n","Epoch 194/500\n","1/1 [==============================] - 0s 31ms/step - loss: 0.0938 - accuracy: 0.9474\n","Epoch 195/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0834 - accuracy: 1.0000\n","Epoch 196/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.0206 - accuracy: 1.0000\n","Epoch 197/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0849 - accuracy: 1.0000\n","Epoch 198/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0657 - accuracy: 1.0000\n","Epoch 199/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0473 - accuracy: 1.0000\n","Epoch 200/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0931 - accuracy: 1.0000\n","Epoch 201/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0814 - accuracy: 1.0000\n","Epoch 202/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0328 - accuracy: 1.0000\n","Epoch 203/500\n","1/1 [==============================] - 0s 34ms/step - loss: 0.0487 - accuracy: 1.0000\n","Epoch 204/500\n","1/1 [==============================] - 0s 30ms/step - loss: 0.0404 - accuracy: 1.0000\n","Epoch 205/500\n","1/1 [==============================] - 0s 31ms/step - loss: 0.0680 - accuracy: 0.9474\n","Epoch 206/500\n","1/1 [==============================] - 0s 29ms/step - loss: 0.1499 - accuracy: 1.0000\n","Epoch 207/500\n","1/1 [==============================] - 0s 29ms/step - loss: 0.0827 - accuracy: 1.0000\n","Epoch 208/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0973 - accuracy: 0.9474\n","Epoch 209/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0317 - accuracy: 1.0000\n","Epoch 210/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0536 - accuracy: 1.0000\n","Epoch 211/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0609 - accuracy: 1.0000\n","Epoch 212/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0438 - accuracy: 1.0000\n","Epoch 213/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.0508 - accuracy: 1.0000\n","Epoch 214/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0276 - accuracy: 1.0000\n","Epoch 215/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0363 - accuracy: 1.0000\n","Epoch 216/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0532 - accuracy: 1.0000\n","Epoch 217/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0350 - accuracy: 1.0000\n","Epoch 218/500\n","1/1 [==============================] - 0s 62ms/step - loss: 0.0265 - accuracy: 1.0000\n","Epoch 219/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0264 - accuracy: 1.0000\n","Epoch 220/500\n","1/1 [==============================] - 0s 87ms/step - loss: 0.0937 - accuracy: 0.9474\n","Epoch 221/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0361 - accuracy: 1.0000\n","Epoch 222/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0162 - accuracy: 1.0000\n","Epoch 223/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0612 - accuracy: 1.0000\n","Epoch 224/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.1012 - accuracy: 0.9474\n","Epoch 225/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0588 - accuracy: 1.0000\n","Epoch 226/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0365 - accuracy: 1.0000\n","Epoch 227/500\n","1/1 [==============================] - 0s 42ms/step - loss: 0.0645 - accuracy: 1.0000\n","Epoch 228/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0400 - accuracy: 1.0000\n","Epoch 229/500\n","1/1 [==============================] - 0s 30ms/step - loss: 0.0533 - accuracy: 1.0000\n","Epoch 230/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.0233 - accuracy: 1.0000\n","Epoch 231/500\n","1/1 [==============================] - 0s 30ms/step - loss: 0.0605 - accuracy: 1.0000\n","Epoch 232/500\n","1/1 [==============================] - 0s 35ms/step - loss: 0.1173 - accuracy: 0.9474\n","Epoch 233/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0347 - accuracy: 1.0000\n","Epoch 234/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0302 - accuracy: 1.0000\n","Epoch 235/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0563 - accuracy: 1.0000\n","Epoch 236/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0588 - accuracy: 1.0000\n","Epoch 237/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0364 - accuracy: 1.0000\n","Epoch 238/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0314 - accuracy: 1.0000\n","Epoch 239/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.0397 - accuracy: 1.0000\n","Epoch 240/500\n","1/1 [==============================] - 0s 41ms/step - loss: 0.0530 - accuracy: 1.0000\n","Epoch 241/500\n","1/1 [==============================] - 0s 33ms/step - loss: 0.0448 - accuracy: 1.0000\n","Epoch 242/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.0305 - accuracy: 1.0000\n","Epoch 243/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0152 - accuracy: 1.0000\n","Epoch 244/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0347 - accuracy: 1.0000\n","Epoch 245/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0309 - accuracy: 1.0000\n","Epoch 246/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0452 - accuracy: 1.0000\n","Epoch 247/500\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 26ms/step - loss: 0.0309 - accuracy: 1.0000\n","Epoch 248/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0297 - accuracy: 1.0000\n","Epoch 249/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0254 - accuracy: 1.0000\n","Epoch 250/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.0299 - accuracy: 1.0000\n","Epoch 251/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0222 - accuracy: 1.0000\n","Epoch 252/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.0294 - accuracy: 1.0000\n","Epoch 253/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0203 - accuracy: 1.0000\n","Epoch 254/500\n","1/1 [==============================] - 0s 29ms/step - loss: 0.0523 - accuracy: 1.0000\n","Epoch 255/500\n","1/1 [==============================] - 0s 49ms/step - loss: 0.0414 - accuracy: 1.0000\n","Epoch 256/500\n","1/1 [==============================] - 0s 37ms/step - loss: 0.0548 - accuracy: 1.0000\n","Epoch 257/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0353 - accuracy: 1.0000\n","Epoch 258/500\n","1/1 [==============================] - 0s 49ms/step - loss: 0.0227 - accuracy: 1.0000\n","Epoch 259/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0209 - accuracy: 1.0000\n","Epoch 260/500\n","1/1 [==============================] - 0s 38ms/step - loss: 0.0389 - accuracy: 1.0000\n","Epoch 261/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0109 - accuracy: 1.0000\n","Epoch 262/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.0420 - accuracy: 1.0000\n","Epoch 263/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0329 - accuracy: 1.0000\n","Epoch 264/500\n","1/1 [==============================] - 0s 37ms/step - loss: 0.0332 - accuracy: 1.0000\n","Epoch 265/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0311 - accuracy: 1.0000\n","Epoch 266/500\n","1/1 [==============================] - 0s 31ms/step - loss: 0.0429 - accuracy: 1.0000\n","Epoch 267/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0166 - accuracy: 1.0000\n","Epoch 268/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0316 - accuracy: 1.0000\n","Epoch 269/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0280 - accuracy: 1.0000\n","Epoch 270/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0388 - accuracy: 1.0000\n","Epoch 271/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0194 - accuracy: 1.0000\n","Epoch 272/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0164 - accuracy: 1.0000\n","Epoch 273/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0185 - accuracy: 1.0000\n","Epoch 274/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.0173 - accuracy: 1.0000\n","Epoch 275/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0148 - accuracy: 1.0000\n","Epoch 276/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0494 - accuracy: 1.0000\n","Epoch 277/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0158 - accuracy: 1.0000\n","Epoch 278/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0224 - accuracy: 1.0000\n","Epoch 279/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0200 - accuracy: 1.0000\n","Epoch 280/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0288 - accuracy: 1.0000\n","Epoch 281/500\n","1/1 [==============================] - 0s 30ms/step - loss: 0.0470 - accuracy: 1.0000\n","Epoch 282/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0150 - accuracy: 1.0000\n","Epoch 283/500\n","1/1 [==============================] - 0s 70ms/step - loss: 0.0398 - accuracy: 1.0000\n","Epoch 284/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0746 - accuracy: 0.9474\n","Epoch 285/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0371 - accuracy: 1.0000\n","Epoch 286/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0165 - accuracy: 1.0000\n","Epoch 287/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0071 - accuracy: 1.0000\n","Epoch 288/500\n","1/1 [==============================] - 0s 35ms/step - loss: 0.0268 - accuracy: 1.0000\n","Epoch 289/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0303 - accuracy: 1.0000\n","Epoch 290/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0088 - accuracy: 1.0000\n","Epoch 291/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0259 - accuracy: 1.0000\n","Epoch 292/500\n","1/1 [==============================] - 0s 31ms/step - loss: 0.0131 - accuracy: 1.0000\n","Epoch 293/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0129 - accuracy: 1.0000\n","Epoch 294/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0165 - accuracy: 1.0000\n","Epoch 295/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0375 - accuracy: 1.0000\n","Epoch 296/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0073 - accuracy: 1.0000\n","Epoch 297/500\n","1/1 [==============================] - 0s 27ms/step - loss: 0.0307 - accuracy: 1.0000\n","Epoch 298/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0415 - accuracy: 1.0000\n","Epoch 299/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0367 - accuracy: 1.0000\n","Epoch 300/500\n","1/1 [==============================] - 0s 30ms/step - loss: 0.0048 - accuracy: 1.0000\n","Epoch 301/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0188 - accuracy: 1.0000\n","Epoch 302/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0190 - accuracy: 1.0000\n","Epoch 303/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0207 - accuracy: 1.0000\n","Epoch 304/500\n","1/1 [==============================] - 0s 28ms/step - loss: 0.0231 - accuracy: 1.0000\n","Epoch 305/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0240 - accuracy: 1.0000\n","Epoch 306/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0200 - accuracy: 1.0000\n","Epoch 307/500\n","1/1 [==============================] - 0s 26ms/step - loss: 0.0097 - accuracy: 1.0000\n","Epoch 308/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0166 - accuracy: 1.0000\n","Epoch 309/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0134 - accuracy: 1.0000\n","Epoch 310/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0174 - accuracy: 1.0000\n","Epoch 311/500\n","1/1 [==============================] - 0s 19ms/step - loss: 0.0082 - accuracy: 1.0000\n","Epoch 312/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0091 - accuracy: 1.0000\n","Epoch 313/500\n","1/1 [==============================] - 0s 24ms/step - loss: 0.0138 - accuracy: 1.0000\n","Epoch 314/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0180 - accuracy: 1.0000\n","Epoch 315/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0217 - accuracy: 1.0000\n","Epoch 316/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0196 - accuracy: 1.0000\n","Epoch 317/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0132 - accuracy: 1.0000\n","Epoch 318/500\n","1/1 [==============================] - 0s 40ms/step - loss: 0.0929 - accuracy: 0.9474\n","Epoch 319/500\n","1/1 [==============================] - 0s 36ms/step - loss: 0.0081 - accuracy: 1.0000\n","Epoch 320/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0123 - accuracy: 1.0000\n","Epoch 321/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0267 - accuracy: 1.0000\n","Epoch 322/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0259 - accuracy: 1.0000\n","Epoch 323/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0054 - accuracy: 1.0000\n","Epoch 324/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0138 - accuracy: 1.0000\n","Epoch 325/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0123 - accuracy: 1.0000\n","Epoch 326/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0253 - accuracy: 1.0000\n","Epoch 327/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0368 - accuracy: 1.0000\n","Epoch 328/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0272 - accuracy: 1.0000\n","Epoch 329/500\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 13ms/step - loss: 0.0120 - accuracy: 1.0000\n","Epoch 330/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.0257 - accuracy: 1.0000\n","Epoch 331/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0352 - accuracy: 1.0000\n","Epoch 332/500\n","1/1 [==============================] - 0s 20ms/step - loss: 0.0079 - accuracy: 1.0000\n","Epoch 333/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.0165 - accuracy: 1.0000\n","Epoch 334/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0174 - accuracy: 1.0000\n","Epoch 335/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0141 - accuracy: 1.0000\n","Epoch 336/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0133 - accuracy: 1.0000\n","Epoch 337/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0079 - accuracy: 1.0000\n","Epoch 338/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0048 - accuracy: 1.0000\n","Epoch 339/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0119 - accuracy: 1.0000\n","Epoch 340/500\n","1/1 [==============================] - 0s 21ms/step - loss: 0.0100 - accuracy: 1.0000\n","Epoch 341/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0053 - accuracy: 1.0000\n","Epoch 342/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0191 - accuracy: 1.0000\n","Epoch 343/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0047 - accuracy: 1.0000\n","Epoch 344/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0062 - accuracy: 1.0000\n","Epoch 345/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0206 - accuracy: 1.0000\n","Epoch 346/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0048 - accuracy: 1.0000\n","Epoch 347/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0315 - accuracy: 1.0000\n","Epoch 348/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0058 - accuracy: 1.0000\n","Epoch 349/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0422 - accuracy: 1.0000\n","Epoch 350/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0378 - accuracy: 1.0000\n","Epoch 351/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0093 - accuracy: 1.0000\n","Epoch 352/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0156 - accuracy: 1.0000\n","Epoch 353/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0120 - accuracy: 1.0000\n","Epoch 354/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0063 - accuracy: 1.0000\n","Epoch 355/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0095 - accuracy: 1.0000\n","Epoch 356/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0118 - accuracy: 1.0000\n","Epoch 357/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0103 - accuracy: 1.0000\n","Epoch 358/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0086 - accuracy: 1.0000\n","Epoch 359/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0060 - accuracy: 1.0000\n","Epoch 360/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0103 - accuracy: 1.0000\n","Epoch 361/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0196 - accuracy: 1.0000\n","Epoch 362/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0093 - accuracy: 1.0000\n","Epoch 363/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0094 - accuracy: 1.0000\n","Epoch 364/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0142 - accuracy: 1.0000\n","Epoch 365/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0447 - accuracy: 1.0000\n","Epoch 366/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0110 - accuracy: 1.0000\n","Epoch 367/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0177 - accuracy: 1.0000\n","Epoch 368/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0078 - accuracy: 1.0000\n","Epoch 369/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0206 - accuracy: 1.0000\n","Epoch 370/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0086 - accuracy: 1.0000\n","Epoch 371/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0101 - accuracy: 1.0000\n","Epoch 372/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0127 - accuracy: 1.0000\n","Epoch 373/500\n","1/1 [==============================] - 0s 8ms/step - loss: 0.0072 - accuracy: 1.0000\n","Epoch 374/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0280 - accuracy: 1.0000\n","Epoch 375/500\n","1/1 [==============================] - 0s 9ms/step - loss: 0.0105 - accuracy: 1.0000\n","Epoch 376/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0047 - accuracy: 1.0000\n","Epoch 377/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0132 - accuracy: 1.0000\n","Epoch 378/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0119 - accuracy: 1.0000\n","Epoch 379/500\n","1/1 [==============================] - 0s 8ms/step - loss: 0.0203 - accuracy: 1.0000\n","Epoch 380/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0571 - accuracy: 0.9474\n","Epoch 381/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0080 - accuracy: 1.0000\n","Epoch 382/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0099 - accuracy: 1.0000\n","Epoch 383/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0135 - accuracy: 1.0000\n","Epoch 384/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0039 - accuracy: 1.0000\n","Epoch 385/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0094 - accuracy: 1.0000\n","Epoch 386/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0049 - accuracy: 1.0000\n","Epoch 387/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0194 - accuracy: 1.0000\n","Epoch 388/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0105 - accuracy: 1.0000\n","Epoch 389/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0286 - accuracy: 1.0000\n","Epoch 390/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0141 - accuracy: 1.0000\n","Epoch 391/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0221 - accuracy: 1.0000\n","Epoch 392/500\n","1/1 [==============================] - 0s 22ms/step - loss: 0.0337 - accuracy: 1.0000\n","Epoch 393/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0063 - accuracy: 1.0000\n","Epoch 394/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0332 - accuracy: 1.0000\n","Epoch 395/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0055 - accuracy: 1.0000\n","Epoch 396/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0184 - accuracy: 1.0000\n","Epoch 397/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0175 - accuracy: 1.0000\n","Epoch 398/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0089 - accuracy: 1.0000\n","Epoch 399/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0063 - accuracy: 1.0000\n","Epoch 400/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0126 - accuracy: 1.0000\n","Epoch 401/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0075 - accuracy: 1.0000\n","Epoch 402/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0200 - accuracy: 1.0000\n","Epoch 403/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0148 - accuracy: 1.0000\n","Epoch 404/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0097 - accuracy: 1.0000\n","Epoch 405/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0050 - accuracy: 1.0000\n","Epoch 406/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0060 - accuracy: 1.0000\n","Epoch 407/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0125 - accuracy: 1.0000\n","Epoch 408/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0231 - accuracy: 1.0000\n","Epoch 409/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0102 - accuracy: 1.0000\n","Epoch 410/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0268 - accuracy: 1.0000\n","Epoch 411/500\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 11ms/step - loss: 0.0058 - accuracy: 1.0000\n","Epoch 412/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0296 - accuracy: 1.0000\n","Epoch 413/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0240 - accuracy: 1.0000\n","Epoch 414/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0064 - accuracy: 1.0000\n","Epoch 415/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0105 - accuracy: 1.0000\n","Epoch 416/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0056 - accuracy: 1.0000\n","Epoch 417/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0196 - accuracy: 1.0000\n","Epoch 418/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0036 - accuracy: 1.0000\n","Epoch 419/500\n","1/1 [==============================] - 0s 17ms/step - loss: 0.0160 - accuracy: 1.0000\n","Epoch 420/500\n","1/1 [==============================] - 0s 33ms/step - loss: 0.0147 - accuracy: 1.0000\n","Epoch 421/500\n","1/1 [==============================] - 0s 18ms/step - loss: 0.0070 - accuracy: 1.0000\n","Epoch 422/500\n","1/1 [==============================] - 0s 25ms/step - loss: 0.0229 - accuracy: 1.0000\n","Epoch 423/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0075 - accuracy: 1.0000\n","Epoch 424/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0053 - accuracy: 1.0000\n","Epoch 425/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0147 - accuracy: 1.0000\n","Epoch 426/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0175 - accuracy: 1.0000\n","Epoch 427/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0195 - accuracy: 1.0000\n","Epoch 428/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0031 - accuracy: 1.0000\n","Epoch 429/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 430/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0086 - accuracy: 1.0000\n","Epoch 431/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0096 - accuracy: 1.0000\n","Epoch 432/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0284 - accuracy: 1.0000\n","Epoch 433/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0117 - accuracy: 1.0000\n","Epoch 434/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0306 - accuracy: 1.0000\n","Epoch 435/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0117 - accuracy: 1.0000\n","Epoch 436/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0062 - accuracy: 1.0000\n","Epoch 437/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0183 - accuracy: 1.0000\n","Epoch 438/500\n","1/1 [==============================] - 0s 23ms/step - loss: 0.0171 - accuracy: 1.0000\n","Epoch 439/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0074 - accuracy: 1.0000\n","Epoch 440/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0047 - accuracy: 1.0000\n","Epoch 441/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 442/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0057 - accuracy: 1.0000\n","Epoch 443/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0038 - accuracy: 1.0000\n","Epoch 444/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0097 - accuracy: 1.0000\n","Epoch 445/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0243 - accuracy: 1.0000\n","Epoch 446/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0065 - accuracy: 1.0000\n","Epoch 447/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0110 - accuracy: 1.0000\n","Epoch 448/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0248 - accuracy: 1.0000\n","Epoch 449/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0081 - accuracy: 1.0000\n","Epoch 450/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 451/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0213 - accuracy: 1.0000\n","Epoch 452/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0048 - accuracy: 1.0000\n","Epoch 453/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0049 - accuracy: 1.0000\n","Epoch 454/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0034 - accuracy: 1.0000\n","Epoch 455/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 456/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0072 - accuracy: 1.0000\n","Epoch 457/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.0033 - accuracy: 1.0000\n","Epoch 458/500\n","1/1 [==============================] - 0s 16ms/step - loss: 0.0071 - accuracy: 1.0000\n","Epoch 459/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0051 - accuracy: 1.0000\n","Epoch 460/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0027 - accuracy: 1.0000\n","Epoch 461/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0057 - accuracy: 1.0000\n","Epoch 462/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0963 - accuracy: 0.9474\n","Epoch 463/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0029 - accuracy: 1.0000\n","Epoch 464/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 465/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0106 - accuracy: 1.0000\n","Epoch 466/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0126 - accuracy: 1.0000\n","Epoch 467/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0071 - accuracy: 1.0000\n","Epoch 468/500\n","1/1 [==============================] - 0s 9ms/step - loss: 0.0242 - accuracy: 1.0000\n","Epoch 469/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0039 - accuracy: 1.0000\n","Epoch 470/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0062 - accuracy: 1.0000\n","Epoch 471/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 472/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0057 - accuracy: 1.0000\n","Epoch 473/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0016 - accuracy: 1.0000\n","Epoch 474/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0157 - accuracy: 1.0000\n","Epoch 475/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0077 - accuracy: 1.0000\n","Epoch 476/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0096 - accuracy: 1.0000\n","Epoch 477/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0061 - accuracy: 1.0000\n","Epoch 478/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 479/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0072 - accuracy: 1.0000\n","Epoch 480/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0170 - accuracy: 1.0000\n","Epoch 481/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0033 - accuracy: 1.0000\n","Epoch 482/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0156 - accuracy: 1.0000\n","Epoch 483/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0184 - accuracy: 1.0000\n","Epoch 484/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0090 - accuracy: 1.0000\n","Epoch 485/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0024 - accuracy: 1.0000\n","Epoch 486/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0091 - accuracy: 1.0000\n","Epoch 487/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0129 - accuracy: 1.0000\n","Epoch 488/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0021 - accuracy: 1.0000\n","Epoch 489/500\n","1/1 [==============================] - 0s 13ms/step - loss: 0.0096 - accuracy: 1.0000\n","Epoch 490/500\n","1/1 [==============================] - 0s 14ms/step - loss: 0.0077 - accuracy: 1.0000\n","Epoch 491/500\n","1/1 [==============================] - 0s 15ms/step - loss: 0.0054 - accuracy: 1.0000\n","Epoch 492/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0018 - accuracy: 1.0000\n","Epoch 493/500\n"]},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 0s 13ms/step - loss: 0.0076 - accuracy: 1.0000\n","Epoch 494/500\n","1/1 [==============================] - 0s 12ms/step - loss: 0.0042 - accuracy: 1.0000\n","Epoch 495/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0027 - accuracy: 1.0000\n","Epoch 496/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0129 - accuracy: 1.0000\n","Epoch 497/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0026 - accuracy: 1.0000\n","Epoch 498/500\n","1/1 [==============================] - 0s 10ms/step - loss: 0.0082 - accuracy: 1.0000\n","Epoch 499/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0034 - accuracy: 1.0000\n","Epoch 500/500\n","1/1 [==============================] - 0s 11ms/step - loss: 0.0039 - accuracy: 1.0000\n"]},{"data":{"text/plain":["<keras.callbacks.History at 0x1fc18f39850>"]},"execution_count":45,"metadata":{},"output_type":"execute_result"}],"source":["model.fit(x=train_X, y=train_y, epochs=500, verbose=1)"]},{"cell_type":"code","execution_count":null,"id":"60288695","metadata":{"id":"60288695"},"outputs":[],"source":["def clean_text(text):\n","    tokens=nltk.word_tokenize(text)\n","    tokens=[lemmatizer.lemmatize(word) for word in tokens]\n","    return tokens\n","\n","def bag_of_words(text,vocab):\n","    tokens=clean_text(text)\n","    bow=[0]*len(vocab)\n","    for w in tokens:\n","        for idx, word in enumerate(vocab):\n","            if word==w:\n","                bow[idx]=1\n","    return np.array(bow)"]},{"cell_type":"code","execution_count":null,"id":"d5841e12","metadata":{"id":"d5841e12"},"outputs":[],"source":["def pred_class(text, vocab,labels):\n","    bow=bag_of_words(text, vocab)\n","    result=model.predict(np.array([bow]))[0]\n","    thresh=0.2\n","    y_pred=[[idx,res] for idx, res in enumerate(result) if res>thresh]\n","\n","    y_pred.sort(key=lambda x:x[1], reverse=True)\n","    return_list=[]\n","    for r in y_pred:\n","        return_list.append(labels[r[0]])\n","    return return_list\n","\n","def get_response(intents_list, intents_json):\n","    tag=intents_list[0]\n","    list_of_intents=intents_json[\"intents\"]\n","    for i in list_of_intents:\n","        if i[\"tag\"]==tag:\n","            result=random.choice(i[\"responses\"])\n","            break\n","    return result"]},{"cell_type":"code","execution_count":null,"id":"1ac93cce","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ac93cce","outputId":"7c3dcb98-3a7c-4e81-e5fd-4b5c181f6c2f"},"outputs":[{"output_type":"stream","name":"stdout","text":["You: Hello\n","Bot: Hi there!\n","You: How are u\n","Bot: I'm just a bot.\n","You: what's the weather like today\n","Bot: I'm just a bot.\n"]}],"source":["# Placeholder data\n","words = [\"hello\", \"how\", \"are\", \"you\", \"weather\"]\n","classes = [\"greeting\", \"inquiry\", \"inquiry\", \"greeting\", \"inquiry\"]\n","\n","data = {\n","    \"greeting\": [\"Hi there!\", \"Hello!\", \"Hey!\"],\n","    \"inquiry\": [\"I'm just a bot.\", \"I'm not sure.\", \"Sorry, I can't provide real-time information.\"]\n","}\n","\n","# Placeholder functions\n","def pred_class(message, words, classes):\n","    message_words = message.lower().split()\n","    for word in message_words:\n","        if word in words:\n","            index = words.index(word)\n","            return classes[index]\n","    return None\n","\n","def get_response(intent, data):\n","    if intent in data:\n","        responses = data[intent]\n","        return responses[0]  # Just return the first response for simplicity\n","    return \"I'm sorry, I don't understand.\"\n","\n","# Main loop\n","while True:\n","    message = input(\"You: \")\n","    intents = pred_class(message, words, classes)\n","    result = get_response(intents, data)\n","    print(\"Bot:\", result)\n","\n"]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"},"colab":{"provenance":[{"file_id":"10tkdUA_5Yr8yYU4t4wZ8UwD9WNYTO6e5","timestamp":1693295349912},{"file_id":"1N1_w_jmUTiGW9nkZqvzp5SXzKyvK02OW","timestamp":1693295178337}]}},"nbformat":4,"nbformat_minor":5}